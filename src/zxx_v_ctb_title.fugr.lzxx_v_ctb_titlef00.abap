*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 10.11.2020 at 09:43:04
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZXX_V_CTB_TITLE.................................*
FORM GET_DATA_ZXX_V_CTB_TITLE.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZXX_T_CTB_TITLE WHERE
(VIM_WHERETAB) .
    CLEAR ZXX_V_CTB_TITLE .
ZXX_V_CTB_TITLE-MANDT =
ZXX_T_CTB_TITLE-MANDT .
ZXX_V_CTB_TITLE-GSTIN_CTB =
ZXX_T_CTB_TITLE-GSTIN_CTB .
ZXX_V_CTB_TITLE-SAP_TITLE =
ZXX_T_CTB_TITLE-SAP_TITLE .
    SELECT SINGLE * FROM TSAD3 WHERE
TITLE = ZXX_T_CTB_TITLE-SAP_TITLE .
    IF SY-SUBRC EQ 0.
ZXX_V_CTB_TITLE-SEX =
TSAD3-SEX .
      SELECT SINGLE * FROM TSAD3T WHERE
TITLE = TSAD3-TITLE AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZXX_V_CTB_TITLE-TITLE_MEDI =
TSAD3T-TITLE_MEDI .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZXX_V_CTB_TITLE.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZXX_V_CTB_TITLE .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZXX_V_CTB_TITLE.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZXX_V_CTB_TITLE-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZXX_T_CTB_TITLE WHERE
  GSTIN_CTB = ZXX_V_CTB_TITLE-GSTIN_CTB AND
  SAP_TITLE = ZXX_V_CTB_TITLE-SAP_TITLE .
    IF SY-SUBRC = 0.
    DELETE ZXX_T_CTB_TITLE .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZXX_T_CTB_TITLE WHERE
  GSTIN_CTB = ZXX_V_CTB_TITLE-GSTIN_CTB AND
  SAP_TITLE = ZXX_V_CTB_TITLE-SAP_TITLE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZXX_T_CTB_TITLE.
    ENDIF.
ZXX_T_CTB_TITLE-MANDT =
ZXX_V_CTB_TITLE-MANDT .
ZXX_T_CTB_TITLE-GSTIN_CTB =
ZXX_V_CTB_TITLE-GSTIN_CTB .
ZXX_T_CTB_TITLE-SAP_TITLE =
ZXX_V_CTB_TITLE-SAP_TITLE .
    IF SY-SUBRC = 0.
    UPDATE ZXX_T_CTB_TITLE ##WARN_OK.
    ELSE.
    INSERT ZXX_T_CTB_TITLE .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZXX_V_CTB_TITLE-UPD_FLAG,
STATUS_ZXX_V_CTB_TITLE-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZXX_V_CTB_TITLE.
  SELECT SINGLE * FROM ZXX_T_CTB_TITLE WHERE
GSTIN_CTB = ZXX_V_CTB_TITLE-GSTIN_CTB AND
SAP_TITLE = ZXX_V_CTB_TITLE-SAP_TITLE .
ZXX_V_CTB_TITLE-MANDT =
ZXX_T_CTB_TITLE-MANDT .
ZXX_V_CTB_TITLE-GSTIN_CTB =
ZXX_T_CTB_TITLE-GSTIN_CTB .
ZXX_V_CTB_TITLE-SAP_TITLE =
ZXX_T_CTB_TITLE-SAP_TITLE .
    SELECT SINGLE * FROM TSAD3 WHERE
TITLE = ZXX_T_CTB_TITLE-SAP_TITLE .
    IF SY-SUBRC EQ 0.
ZXX_V_CTB_TITLE-SEX =
TSAD3-SEX .
      SELECT SINGLE * FROM TSAD3T WHERE
TITLE = TSAD3-TITLE AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZXX_V_CTB_TITLE-TITLE_MEDI =
TSAD3T-TITLE_MEDI .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZXX_V_CTB_TITLE-TITLE_MEDI .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZXX_V_CTB_TITLE-SEX .
      CLEAR ZXX_V_CTB_TITLE-TITLE_MEDI .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZXX_V_CTB_TITLE USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZXX_V_CTB_TITLE-GSTIN_CTB TO
ZXX_T_CTB_TITLE-GSTIN_CTB .
MOVE ZXX_V_CTB_TITLE-SAP_TITLE TO
ZXX_T_CTB_TITLE-SAP_TITLE .
MOVE ZXX_V_CTB_TITLE-MANDT TO
ZXX_T_CTB_TITLE-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZXX_T_CTB_TITLE'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZXX_T_CTB_TITLE TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZXX_T_CTB_TITLE'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZXX_V_CTB_TITLE USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZXX_T_CTB_TITLE-MANDT =
ZXX_V_CTB_TITLE-MANDT .
ZXX_T_CTB_TITLE-GSTIN_CTB =
ZXX_V_CTB_TITLE-GSTIN_CTB .
ZXX_T_CTB_TITLE-SAP_TITLE =
ZXX_V_CTB_TITLE-SAP_TITLE .
    SELECT SINGLE * FROM TSAD3 WHERE
TITLE = ZXX_T_CTB_TITLE-SAP_TITLE .
    IF SY-SUBRC EQ 0.
ZXX_V_CTB_TITLE-SEX =
TSAD3-SEX .
      SELECT SINGLE * FROM TSAD3T WHERE
TITLE = TSAD3-TITLE AND
LANGU = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZXX_V_CTB_TITLE-TITLE_MEDI =
TSAD3T-TITLE_MEDI .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZXX_V_CTB_TITLE-TITLE_MEDI .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZXX_V_CTB_TITLE-SEX .
      CLEAR ZXX_V_CTB_TITLE-TITLE_MEDI .
    ENDIF.
ENDFORM.
